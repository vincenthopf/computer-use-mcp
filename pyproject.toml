[project]
name = "gemini-web-automation-mcp"
version = "1.0.0"
description = "Production-ready MCP server providing AI-powered web browsing automation using Gemini 2.5 Computer Use API"
readme = "README.md"
requires-python = ">=3.10"
license = {text = "MIT"}
authors = [
    {name = "Gemini Web Automation Contributors", email = "contact@example.com"}
]
keywords = [
    "mcp",
    "gemini",
    "browser-automation",
    "computer-use",
    "claude-desktop",
    "ai-agents",
    "web-scraping",
    "playwright"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Internet :: WWW/HTTP :: Browsers",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
dependencies = [
    "mcp[cli]>=1.0.0",
    "google-genai>=1.0.0",
    "playwright>=1.40.0",
    "python-dotenv>=1.0.0",
    "anyio>=4.0.0",
]

[project.urls]
Homepage = "https://github.com/yourusername/gemini-web-automation-mcp"
Documentation = "https://github.com/yourusername/gemini-web-automation-mcp#readme"
Repository = "https://github.com/yourusername/gemini-web-automation-mcp"
Issues = "https://github.com/yourusername/gemini-web-automation-mcp/issues"
Changelog = "https://github.com/yourusername/gemini-web-automation-mcp/blob/main/CHANGELOG.md"

[project.scripts]
gemini-computer-use-mcp = "server:main"

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["."]

[tool.uv]
dev-dependencies = []
